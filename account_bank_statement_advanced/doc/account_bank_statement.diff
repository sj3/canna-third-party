--- addons/account/account_bank_statement.py	2015-09-05 12:19:32.000000000 +0200
+++ addons/account/account_bank_statement.py	2015-09-05 12:42:47.000000000 +0200
@@ -38,14 +38,6 @@
                 line[2]['sequence'] = idx + 1
         return super(account_bank_statement, self).create(cr, uid, vals, context=context)
 
-    def write(self, cr, uid, ids, vals, context=None):
-        res = super(account_bank_statement, self).write(cr, uid, ids, vals, context=context)
-        account_bank_statement_line_obj = self.pool.get('account.bank.statement.line')
-        for statement in self.browse(cr, uid, ids, context):
-            for idx, line in enumerate(statement.line_ids):
-                account_bank_statement_line_obj.write(cr, uid, [line.id], {'sequence': idx + 1}, context=context)
-        return res
-
     def _default_journal_id(self, cr, uid, context=None):
         if context is None:
             context = {}
@@ -428,7 +420,27 @@
 
 class account_bank_statement_line(osv.osv):
 
+    def _default_line_name(self, cr, uid, context=None):
+        name = self.pool['ir.sequence'].get(cr, uid, 'account.bank.statement.line', context=context)
+        return name or '/'
+
     def create(self, cr, uid, vals, context=None):
+
+        if not vals.get('sequence'):
+            lines = self.search(
+                cr, uid,
+                [('statement_id', '=', vals.get('statement_id'))],
+                order='sequence desc', limit=1)
+            if lines:
+                line = self.browse(cr, uid, lines[0], context=context)
+                seq = line.sequence
+            else:
+                seq = 0
+            vals['sequence'] = seq + 1
+
+        if not vals.get('name'):
+            vals['name'] = self._default_line_name(cr, uid, context=context)
+
         if vals.get('amount_currency', 0) and not vals.get('amount', 0):
             raise osv.except_osv(_('Error!'), _('If "Amount Currency" is specified, then "Amount" must be as well.'))
         return super(account_bank_statement_line, self).create(cr, uid, vals, context=context)
@@ -944,7 +956,7 @@
         'currency_id': fields.many2one('res.currency', 'Currency', help="The optional other currency if it is a multi-currency entry."),
     }
     _defaults = {
-        'name': lambda self,cr,uid,context={}: self.pool.get('ir.sequence').get(cr, uid, 'account.bank.statement.line', context=context),
+        'name': _default_line_name,
         'date': lambda self,cr,uid,context={}: context.get('date', fields.date.context_today(self,cr,uid,context=context)),
     }
 
